; Listing generated by Microsoft (R) Optimizing Compiler Version 19.42.34435.0 

	TITLE	D:\repo\HelloWorld-using-CommonLibSSE-NG\dev\assembly.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	??0A@@QAE@XZ					; A::A
PUBLIC	??0B@@QAE@XZ					; B::B
PUBLIC	??0C@@QAE@XZ					; C::C
PUBLIC	?foo@@YIHHH@Z					; foo
PUBLIC	_main
PUBLIC	??_7A@@6B@					; A::`vftable'
PUBLIC	??_7B@@6B@					; B::`vftable'
PUBLIC	??_7C@@6BA@@@					; C::`vftable'
PUBLIC	??_7C@@6BB@@@					; C::`vftable'
PUBLIC	??_R4A@@6B@					; A::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVA@@@8					; A `RTTI Type Descriptor'
PUBLIC	??_R3A@@8					; A::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2A@@8					; A::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@A@@8				; A::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4B@@6B@					; B::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVB@@@8					; B `RTTI Type Descriptor'
PUBLIC	??_R3B@@8					; B::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2B@@8					; B::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@B@@8				; B::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4C@@6BA@@@					; C::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVC@@@8					; C `RTTI Type Descriptor'
PUBLIC	??_R3C@@8					; C::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2C@@8					; C::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@C@@8				; C::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R17?0A@EA@B@@8				; B::`RTTI Base Class Descriptor at (8,-1,0,64)'
PUBLIC	??_R4C@@6BB@@@					; C::`RTTI Complete Object Locator'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	?A_virt1@A@@UAEHXZ:PROC				; A::A_virt1
EXTRN	?A_virt2@A@@UAEHXZ:PROC				; A::A_virt2
EXTRN	?B_virt1@B@@UAEHXZ:PROC				; B::B_virt1
EXTRN	?B_virt2@B@@UAEHXZ:PROC				; B::B_virt2
EXTRN	?A_virt2@C@@UAEHXZ:PROC				; C::A_virt2
EXTRN	?B_virt2@C@@UAEHXZ:PROC				; C::B_virt2
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
;	COMDAT ??_R4C@@6BB@@@
rdata$r	SEGMENT
??_R4C@@6BB@@@ DD 00H					; C::`RTTI Complete Object Locator'
	DD	08H
	DD	00H
	DD	FLAT:??_R0?AVC@@@8
	DD	FLAT:??_R3C@@8
rdata$r	ENDS
;	COMDAT ??_R17?0A@EA@B@@8
rdata$r	SEGMENT
??_R17?0A@EA@B@@8 DD FLAT:??_R0?AVB@@@8			; B::`RTTI Base Class Descriptor at (8,-1,0,64)'
	DD	00H
	DD	08H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3B@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@C@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@C@@8 DD FLAT:??_R0?AVC@@@8		; C::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3C@@8
rdata$r	ENDS
;	COMDAT ??_R2C@@8
rdata$r	SEGMENT
??_R2C@@8 DD	FLAT:??_R1A@?0A@EA@C@@8			; C::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@A@@8
	DD	FLAT:??_R17?0A@EA@B@@8
rdata$r	ENDS
;	COMDAT ??_R3C@@8
rdata$r	SEGMENT
??_R3C@@8 DD	00H					; C::`RTTI Class Hierarchy Descriptor'
	DD	01H
	DD	03H
	DD	FLAT:??_R2C@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVC@@@8
data$rs	SEGMENT
??_R0?AVC@@@8 DD FLAT:??_7type_info@@6B@		; C `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVC@@', 00H
data$rs	ENDS
;	COMDAT ??_R4C@@6BA@@@
rdata$r	SEGMENT
??_R4C@@6BA@@@ DD 00H					; C::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVC@@@8
	DD	FLAT:??_R3C@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@B@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@B@@8 DD FLAT:??_R0?AVB@@@8		; B::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3B@@8
rdata$r	ENDS
;	COMDAT ??_R2B@@8
rdata$r	SEGMENT
??_R2B@@8 DD	FLAT:??_R1A@?0A@EA@B@@8			; B::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3B@@8
rdata$r	SEGMENT
??_R3B@@8 DD	00H					; B::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2B@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVB@@@8
data$rs	SEGMENT
??_R0?AVB@@@8 DD FLAT:??_7type_info@@6B@		; B `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVB@@', 00H
data$rs	ENDS
;	COMDAT ??_R4B@@6B@
rdata$r	SEGMENT
??_R4B@@6B@ DD	00H					; B::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVB@@@8
	DD	FLAT:??_R3B@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@A@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@A@@8 DD FLAT:??_R0?AVA@@@8		; A::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3A@@8
rdata$r	ENDS
;	COMDAT ??_R2A@@8
rdata$r	SEGMENT
??_R2A@@8 DD	FLAT:??_R1A@?0A@EA@A@@8			; A::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3A@@8
rdata$r	SEGMENT
??_R3A@@8 DD	00H					; A::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2A@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVA@@@8
data$rs	SEGMENT
??_R0?AVA@@@8 DD FLAT:??_7type_info@@6B@		; A `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVA@@', 00H
data$rs	ENDS
;	COMDAT ??_R4A@@6B@
rdata$r	SEGMENT
??_R4A@@6B@ DD	00H					; A::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVA@@@8
	DD	FLAT:??_R3A@@8
rdata$r	ENDS
;	COMDAT ??_7C@@6BB@@@
CONST	SEGMENT
??_7C@@6BB@@@ DD FLAT:??_R4C@@6BB@@@			; C::`vftable'
	DD	FLAT:?B_virt1@B@@UAEHXZ
	DD	FLAT:?B_virt2@C@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7C@@6BA@@@
CONST	SEGMENT
??_7C@@6BA@@@ DD FLAT:??_R4C@@6BA@@@			; C::`vftable'
	DD	FLAT:?A_virt1@A@@UAEHXZ
	DD	FLAT:?A_virt2@C@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7B@@6B@
CONST	SEGMENT
??_7B@@6B@ DD	FLAT:??_R4B@@6B@			; B::`vftable'
	DD	FLAT:?B_virt1@B@@UAEHXZ
	DD	FLAT:?B_virt2@B@@UAEHXZ
CONST	ENDS
;	COMDAT ??_7A@@6B@
CONST	SEGMENT
??_7A@@6B@ DD	FLAT:??_R4A@@6B@			; A::`vftable'
	DD	FLAT:?A_virt1@A@@UAEHXZ
	DD	FLAT:?A_virt2@A@@UAEHXZ
CONST	ENDS
; Function compile flags: /Odtp
; File D:\repo\HelloWorld-using-CommonLibSSE-NG\dev\assembly.cpp
_TEXT	SEGMENT
tv70 = -12						; size = 4
$T1 = -8						; size = 4
_pC$ = -4						; size = 4
_main	PROC

; 31   : int main() { 

	push	ebp
	mov	ebp, esp
	sub	esp, 12					; 0000000cH

; 32   :     auto* pC = new C();

	push	24					; 00000018H
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T1[ebp], eax
	cmp	DWORD PTR $T1[ebp], 0
	je	SHORT $LN3@main
	xor	eax, eax
	mov	ecx, DWORD PTR $T1[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	DWORD PTR [ecx+8], eax
	mov	DWORD PTR [ecx+12], eax
	mov	DWORD PTR [ecx+16], eax
	mov	DWORD PTR [ecx+20], eax
	mov	ecx, DWORD PTR $T1[ebp]
	call	??0C@@QAE@XZ
	mov	DWORD PTR tv70[ebp], eax
	jmp	SHORT $LN4@main
$LN3@main:
	mov	DWORD PTR tv70[ebp], 0
$LN4@main:
	mov	edx, DWORD PTR tv70[ebp]
	mov	DWORD PTR _pC$[ebp], edx

; 33   :     pC->A_virt2();

	mov	eax, DWORD PTR _pC$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _pC$[ebp]
	mov	eax, DWORD PTR [edx+4]
	call	eax

; 34   :     pC->B_virt1();

	mov	ecx, DWORD PTR _pC$[ebp]
	add	ecx, 8
	mov	edx, DWORD PTR _pC$[ebp]
	mov	eax, DWORD PTR [edx+8]
	mov	edx, DWORD PTR [eax]
	call	edx

; 35   :     
; 36   :     return foo(1, 2); }

	mov	edx, 2
	mov	ecx, 1
	call	?foo@@YIHHH@Z				; foo
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
; File D:\repo\HelloWorld-using-CommonLibSSE-NG\dev\assembly.cpp
_TEXT	SEGMENT
_b$ = -8						; size = 4
_a$ = -4						; size = 4
?foo@@YIHHH@Z PROC					; foo
; _a$ = ecx
; _b$ = edx

; 29   : int __fastcall foo(int a, int b) { return a + b; }

	push	ebp
	mov	ebp, esp
	sub	esp, 8
	mov	DWORD PTR _b$[ebp], edx
	mov	DWORD PTR _a$[ebp], ecx
	mov	eax, DWORD PTR _a$[ebp]
	add	eax, DWORD PTR _b$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
?foo@@YIHHH@Z ENDP					; foo
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0C@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0C@@QAE@XZ PROC					; C::C, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0A@@QAE@XZ
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 8
	call	??0B@@QAE@XZ
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7C@@6BA@@@
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+8], OFFSET ??_7C@@6BB@@@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0C@@QAE@XZ ENDP					; C::C
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0B@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0B@@QAE@XZ PROC					; B::B, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7B@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0B@@QAE@XZ ENDP					; B::B
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0A@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0A@@QAE@XZ PROC					; A::A, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	push	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7A@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	esp, ebp
	pop	ebp
	ret	0
??0A@@QAE@XZ ENDP					; A::A
_TEXT	ENDS
END
